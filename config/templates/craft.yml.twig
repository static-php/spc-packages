php-version: {{ php_version }}
extensions: calendar,ctype,curl,dom,exif,filter,iconv,libxml,mbregex,mbstring,opcache,openssl,password-argon2,pcntl,phar,posix,readline,session,simplexml,sockets,sodium,tokenizer,xml,xmlreader,xmlwriter,zlib
{% if php_version == '8.5' %}
shared-extensions: apcu,ast,bcmath,brotli,bz2,dba,dio,ds,ev,event,ffi,fileinfo,ftp,gd,gettext,gmp,gmssl,inotify,intl,ldap,lz4,msgpack,mysqli,mysqlnd,odbc,opentelemetry,parallel,pdo,pdo_mysql,pdo_odbc,pdo_pgsql,pdo_sqlite,pgsql,protobuf,rdkafka,shmop,simdjson,snappy,soap,sqlite3,sqlsrv,ssh2,sysvmsg,sysvsem,sysvshm,tidy,uuid,uv,xhprof,xlswriter,xsl,xz,yaml,zip,zstd
{% else %}
shared-extensions: amqp,apcu,ast,bcmath,brotli,bz2,dba,dio,ds,ev,event,ffi,fileinfo,ftp,gd,gettext,gmp,gmssl,grpc,igbinary,imagick,inotify,intl,ldap,lz4,memcache,memcached,mongodb,msgpack,mysqli,mysqlnd,odbc,opentelemetry,parallel,pdo,pdo_mysql,pdo_odbc,pdo_pgsql,pdo_sqlite,pdo_sqlsrv,pgsql,protobuf,rar,redis,rdkafka,shmop,simdjson,snappy,soap,spx,sqlite3,sqlsrv,ssh2,swoole,swoole-hook-mysql,swoole-hook-pgsql,swoole-hook-sqlite,swoole-hook-odbc,sysvmsg,sysvsem,sysvshm,tidy,uuid,uv,xdebug,xhprof,xlswriter,xsl,xz,yac,yaml,zip,zstd
{% endif %}
libs: [libacl, libavif, brotli, watcher]
sapi: cli,cgi,fpm,embed,frankenphp
debug: false
build-options:
    enable-zts: true
    with-clean: false
    with-suggested-libs: true
    with-suggested-exts: false
    no-strip: false
    with-config-file-path: '/etc/{{ prefix }}'
    with-config-file-scan-dir: '/etc/{{ prefix }}/conf.d'
    # Hardcoded INI options for cli and micro SAPI (e.g. "memory_limit=4G", list accepted)
    with-hardcoded-ini: [ ]
    # UPX pack the binary (default: false)
    with-upx-pack: false

download-options:
    prefer-pre-built: false
    no-alt: false
    ignore-cache-sources: 'php-src'

craft-options:
    doctor: true
    download: true
    build: true

{% set arch_flags = arch == 'x86_64' ? ' -mtls-dialect=gnu2 -m64 -fcf-protection' : '' %}
{% if arch == 'x86_64' and os == '10' %} {% set arch_flags = arch_flags ~ ' -march=x86-64-v3' %} {% endif %}
{% if arch == 'x86_64' and os == '9'  %} {% set arch_flags = arch_flags ~ ' -march=x86-64-v2' %} {% endif %}
{% set using_gcc = target == ('native-native-gnu' or target == 'native-native') and php_version < '8.5' %}
{% set specs_cflags = '-specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1' %}
{% set specs_ldflags = '-specs=/usr/lib/rpm/redhat/redhat-hardened-ld -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1' ~ (os == '10' ? ' -Wl,-z,pack-relative-relocs' : '') %}
{% set cflags =
  '-g -fPIC -O3 -pipe -fno-plt -fno-semantic-interposition -fasynchronous-unwind-tables -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fno-strict-aliasing' ~ arch_flags
%}
{% set is_rhel = os in ['7', '8', '9', '10'] %}
{% if using_gcc and is_rhel %}
    {% if os == '7' or os == '8' %}
        {% set cflags = cflags ~ ' -Wp,-D_FORTIFY_SOURCE=2' ~ ' ' ~ specs_cflags %}
    {% else %}
        {% set cflags = cflags ~ ' -Wp,-U_FORTIFY_SOURCE,-D_FORTIY_SOURCE=3' ~ ' ' ~ specs_cflags %}
    {% endif %}
{% else %}
    {% set cflags = cflags ~ ' -D_FORTIY_SOURCE=3' %}
{% endif %}

extra-env:
    {% if using_gcc -%}
    SPC_TOOLCHAIN: 'SPC\toolchain\GccNativeToolchain'
    SPC_LIBC: 'glibc'
    {% else -%}
    SPC_TARGET: '{{ target }}'
    {% endif -%}
    EXTENSION_DIR: "{{ is_rhel ? '/usr/lib64/php-zts/modules' : '/usr/lib/php-zts/modules' }}"
    SPC_CMD_VAR_PHP_EMBED_TYPE: 'shared'
    SPC_MICRO_PATCHES:
    SPC_DEFAULT_C_FLAGS: "{{ cflags }}"
    SPC_DEFAULT_CXX_FLAGS: "{{ cflags }}"
    SPC_DEFAULT_LD_FLAGS: "-Wl,-z,relro -Wl,--as-needed -Wl,-z,now -Wl,-z,noexecstack -Wl,--build-id=sha1 {{ using_gcc and is_rhel ? specs_ldflags : '' }}"
    SPC_CMD_VAR_PHP_MAKE_EXTRA_CFLAGS: "{{ cflags }} -fPIE{{ using_gcc ? '' : ' -flto'}}"
    SPC_CMD_VAR_PHP_MAKE_EXTRA_LDFLAGS: "-pie -release zts-{{ php_version_nodot }}{{ using_gcc ? '' : ' -flto'}}"
    SPC_CMD_PREFIX_PHP_CONFIGURE: "./configure --prefix= --with-valgrind=no --disable-shared --enable-static --disable-all --disable-cgi --disable-phpdbg --disable-debug --with-pic --disable-dependency-tracking --enable-rtld-now --enable-re2c-cgoto --disable-rpath"
    SPC_CMD_VAR_FRANKENPHP_XCADDY_MODULES: "--with github.com/dunglas/frankenphp/caddy --with github.com/dunglas/mercure/caddy --with github.com/dunglas/vulcain/caddy --with github.com/dunglas/caddy-cbrotli --with github.com/baldinof/caddy-supervisor"
    PHP_BUILD_PROVIDER: "Static PHP <https://static-php.dev> #StandWithUkraine"
    PHP_BUILD_ARCH: '{{ arch }}'
    {% if is_rhel -%}
    PHP_BUILD_SYSTEM: 'Red Hat Enterprise Linux {{ os }}'
    {% endif -%}
